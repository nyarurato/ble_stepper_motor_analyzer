

* [Board ] Add stepper connectors to pick and place.
* [Python] Avoid jump on first few samples in distance and speed graphs.
* [Python] Accept probe id rather than probe address.
* [Python] Add text display of steps and currents.
* [Device] Add capturing of absolute steps and use it to compute speed. Filter out direction change dittering.
* [Device] Change divider to uint8 everywhere and clip at 50.

---------------


* [Python] Accept device address from command line flag.
* [Python] Exit demo program if lost connection. Alternatively, reconnect.

* [Device] Provide button feedback using LED2  (epprom write OK/failed, direction forward/backward);
* [Device] Unstable step counter when X stepper is in low current mode (~0.2A)
* [Device] Add MCUBoot and BLE/DFU.

----

* Proper critical section protection in analyzer (how to disable preemption)?
* Add read command for histograms.
* In python demo program, solve forward reference issue.
* Add write command to reset stats and to set params.
* Reduce the time the device waits from disconnection to advertising.
* Consider to simplify chart.
* Add UI button to reset the data.
* Add UI button to pause.
* Do we need the signal filter in the analyzer?
* Visual indication (LED) of connection and activity.
* Clear charts on reset.
* Add read command for capture signals.
* [Device] Add a procedure to save current sensor offset to non volatile memory.
* [Device] Add command to flip direction (preferably non volatile memory)
* [Device] Add command to set divider.
* [Python] Add button to toggle the divider.




